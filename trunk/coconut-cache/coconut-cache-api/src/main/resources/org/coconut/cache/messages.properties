AbstractCache.0 =An item was added to the cache
AbstractCache.1 =An item was removed from the cache
AbstractCache.2 =An item was accessed in the cache
AbstractCache.3 =The Cache's hitratio statistics was reset. Hitratio: {0} Number of Hits: {1} Number of Misses: {2} 
AbstractCache.6=The cache was cleared {0} item(s) was removed
AbstractCache.default_logger = No logger was defined for cache: {0} \n\
                  Resorting to java.util.logging.Logger("{1}")\n\
                  This logger can be turned off by defining a custom cache error handler using CacheConfiguration.setErrorHandler(logger)\n\
                  Or by calling java.util.logging.Logger.getLogger("{1}").setLevel(Level.OFF)\n\
                  Logging at Error level from now on
MapEntry =setValue not supported by this Map.Entry
org.coconut.cache.hitstat = Hit statistics [ratio = {0}, hits = {1}, misses = {2}]
org.coconut.cache.spi.CacheStatisticsSupport.cache_hits = foo
org.coconut.cache.xml.comment.errorhandler.notinstance1 = \n\The ErrorHandler of this cache must be set programmatically, \n\
              only instances of CacheErrorHandler can be set via XML, instance was of type ({0}) \n
org.coconut.cache.xml.comment.errorhandler.notinstance2 = \n\The logger of this ErrorHandler must be set programmatically, \n\
              only instances of Logs.AbstractLogger can be set via XML, instance was of type ({0}) \n
              org.coconut.cache.xml.comment.errorhandler.notinstance3 = \n\The logger of this ErrorHandler must be set programmatically, \n\
              the type of the given logger cannot be determined, instance was of type ({0}) \n